{"version":3,"sources":["components/phonebook-CSS/ContactForm.module.css","components/phonebook-CSS/ContactListItem.module.css","components/phonebook-CSS/FilterForm.module.css","components/phonebook-CSS/Spinner.module.css","components/phonebook-CSS/ContactList.module.css","components/phonebook-CSS/Phonebook.module.css","redux/contacts/contactSlice.jsx","components/Spinner.jsx","components/ContactForm.jsx","components/ContactListItem.jsx","components/ContactList.jsx","components/FilterForm.jsx","components/Phonebook.jsx","App.jsx","redux/store.js","index.js"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","LoaderSpinner","className","css","wrap","type","color","height","width","timeout","ContactForm","contacts","isLoading","useState","name","setName","phone","setPhone","nameId","useRef","shortid","generate","phoneId","handleChange","e","target","value","form","onSubmit","preventDefault","toastStyle","style","borderRadius","background","find","contact","toLowerCase","toast","success","label","htmlFor","current","inputName","id","onChange","placeholder","pattern","required","inputNumber","button","ContactListItem","listItem","buttonDel","onClick","disabled","ContactList","sort","a","b","localeCompare","list","map","Filter","filterLabel","filterInput","Phonebook","data","isFetching","filter","setFilter","PhonebookContainer","length","includes","position","App","middleware","getDefaultMiddleware","store","configureStore","reducer","devTools","process","setupListeners","dispatch","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba2c435.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Quny\",\"inputName\":\"ContactForm_inputName__2kzYx\",\"label\":\"ContactForm_label__1R5oq\",\"inputNumber\":\"ContactForm_inputNumber__14doA\",\"button\":\"ContactForm_button__1YoGN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__1Uzn0\",\"buttonDel\":\"ContactListItem_buttonDel__2tO_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"FilterForm_filterLabel__3n_eq\",\"filterInput\":\"FilterForm_filterInput__wOJjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"Spinner_wrap__3ZSYt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2NSOq\",\"button\":\"ContactList_button__4Y9S0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PhonebookContainer\":\"Phonebook_PhonebookContainer__2oeBd\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactsApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://616ae77c16e7120017fa112f.mockapi.io/api/phonebook/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContacts: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: newContact => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body: newContact,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchContactsQuery,\r\n  useDeleteContactMutation,\r\n  useCreateContactMutation,\r\n} = contactApi;\r\n","import Loader from 'react-loader-spinner';\r\n\r\nimport css from './phonebook-CSS/Spinner.module.css';\r\n\r\nexport const LoaderSpinner = () => {\r\n  return (\r\n    <div className={css.wrap}>\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { useState, useRef } from 'react';\r\nimport { useCreateContactMutation } from '../redux/contacts/contactSlice';\r\nimport shortid from 'shortid';\r\nimport { LoaderSpinner } from './Spinner';\r\nimport { toast } from 'react-hot-toast';\r\nimport css from './phonebook-CSS/ContactForm.module.css';\r\n\r\nexport default function ContactForm({ contacts }) {\r\n  // const dispatch = useDispatch();\r\n  // const contacts = useSelector(contactsSelectors.getContacts);\r\n  // const isLoading = useSelector(contactsSelectors.getLoading);\r\n\r\n  const [createContact, { isLoading }] = useCreateContactMutation();\r\n\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n  const nameId = useRef(shortid.generate());\r\n  const phoneId = useRef(shortid.generate());\r\n\r\n  const handleChange = e => {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n\r\n      case 'phone':\r\n        setPhone(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const toastStyle = {\r\n      style: {\r\n        borderRadius: '10px',\r\n        background: '#e8f2f2',\r\n        color: '#000',\r\n      },\r\n    };\r\n\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      toast(`'${name}' is already in contacts`, toastStyle);\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(contact => contact.phone === phone)) {\r\n      toast(`'${phone}' is already in contacts`, toastStyle);\r\n      return;\r\n    }\r\n\r\n    createContact({ name, phone });\r\n    toast.success(`New contact '${name}' is added`);\r\n\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={css.form} onSubmit={handleSubmit}>\r\n        <label className={css.label} htmlFor={nameId.current}>\r\n          Name\r\n          <input\r\n            className={css.inputName}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            id={nameId.current}\r\n            onChange={handleChange}\r\n            placeholder=\" John Smith\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={css.label} htmlFor={phoneId.current}>\r\n          Phone\r\n          <input\r\n            className={css.inputNumber}\r\n            type=\"tel\"\r\n            name=\"phone\"\r\n            value={phone}\r\n            onChange={handleChange}\r\n            placeholder=\" 111-11-11\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            required\r\n          />\r\n        </label>\r\n        {!isLoading && (\r\n          <button className={css.button} type=\"submit\">\r\n            {isLoading ? <LoaderSpinner /> : 'Add contact'}\r\n          </button>\r\n        )}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import { useDeleteContactMutation } from '../redux/contacts/contactSlice';\r\nimport { LoaderSpinner } from './Spinner';\r\nimport toast from 'react-hot-toast';\r\nimport css from './phonebook-CSS/ContactListItem.module.css';\r\n\r\nexport function ContactListItem({ id, name, phone }) {\r\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li key={id} className={css.listItem}>\r\n      <div>\r\n        <span>{name}: </span>\r\n        <span>{phone}</span>\r\n      </div>\r\n      <button\r\n        className={css.buttonDel}\r\n        onClick={() => {\r\n          deleteContact(id);\r\n          toast.success(`Contact '${name}' deleted`);\r\n        }}\r\n        disabled={isLoading}\r\n      >\r\n        {isLoading && <LoaderSpinner />}\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import { ContactListItem } from './ContactListItem';\r\nimport css from './phonebook-CSS/ContactList.module.css';\r\n\r\nexport default function ContactList({ contacts }) {\r\n  contacts.sort((a, b) => a.name.localeCompare(b.name));\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {contacts.map(({ id, name, phone }) => (\r\n        <ContactListItem key={id} name={name} phone={phone} />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import css from './phonebook-CSS/FilterForm.module.css';\r\n\r\nexport default function Filter({ value, onChange }) {\r\n  return (\r\n    <label className={css.filterLabel}>\r\n      Find contacts by name\r\n      <input\r\n        className={css.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        placeholder=\"Enter contact's name\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { Toaster } from 'react-hot-toast';\r\n\r\nimport ContactForm from './ContactForm';\r\nimport ContactList from './ContactList';\r\nimport Filter from './FilterForm';\r\nimport { LoaderSpinner } from './Spinner';\r\nimport { useFetchContactsQuery } from '../redux/contacts/contactSlice';\r\nimport css from './phonebook-CSS/Phonebook.module.css';\r\n\r\nexport default function Phonebook() {\r\n  const { data, isFetching } = useFetchContactsQuery();\r\n  const [filter, setFilter] = useState('');\r\n\r\n  const onChange = e => setFilter(e.target.value);\r\n\r\n  const onFilteredContacts = () => {\r\n    return data.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.PhonebookContainer}>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm contacts={data} />\r\n\r\n      <h2>Contacts</h2>\r\n      {data && data.length !== 0 ? (\r\n        <Filter value={filter} onChange={onChange} />\r\n      ) : (\r\n        <h3>There is no contacts in your phonebook</h3>\r\n      )}\r\n\r\n      {isFetching && <LoaderSpinner />}\r\n      {data && <ContactList contacts={onFilteredContacts()} />}\r\n\r\n      <Toaster position=\"top-right\" />\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Phonebook from './components/Phonebook';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Phonebook />\r\n    </>\r\n  );\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { contactApi } from '../redux/contacts/contactSlice.jsx';\r\nimport { setupListeners } from '@reduxjs/toolkit/dist/query';\r\n\r\nconst middleware = [...getDefaultMiddleware(), contactApi.middleware];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [contactApi.reducerPath]: contactApi.reducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport { store } from './redux/store';\r\nimport 'normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}